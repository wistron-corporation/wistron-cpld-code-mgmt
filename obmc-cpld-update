#!/bin/bash
set -eo pipefail

cpld_active_dir='/var/lib/wistron-cpld-code-mgmt'
cpld_active_path='/var/lib/wistron-cpld-code-mgmt/cpld'
cpld_release_path='/etc/cpld-release'
dev_jtag_name='/dev/jtag0'
old_version=''
frequency=100000 # Max is 109550 Hz
is_init=0

update_fw() {
  ret=0
  old_media_dir=$(find /media -type d -name "cpld-*")
  svf_file_path=$(find /tmp/images/$versionId/ -name "*.svf")
  
  svf -s -f $frequency -n $dev_jtag_name -p $svf_file_path || ret=$?
  if [ $ret -ne 0 ]; then
    echo "Update CPLD firmware fail!"
    return $ret
  fi
  
  return 0
}

# Update "cpld-release" content from new MANIFEST
update_file_cpld_release() {
  ret=0
  tmp_images_dir="/tmp/images/$versionId/"
  manifest_path="/tmp/images/$versionId/MANIFEST"
  tmp_cpld_release_path="/tmp/images/$versionId/cpld-release"

  # Copy MANIFEST to be a file "cpld-release"
  cp $manifest_path $tmp_cpld_release_path
  echo "Copy $manifest_path to $tmp_cpld_release_path"
  
  cp $tmp_cpld_release_path $cpld_release_path
  echo "Copy $tmp_cpld_release_path to $cpld_release_path"
  
  cp $tmp_cpld_release_path $cpld_active_dir
  echo "Copy $tmp_cpld_release_path to $cpld_active_dir"
}

# Remove old files and create file - "cpld-release"
setup_cpld_release() {
  ret=0
  # Remove all old /media/* files to let DBus to create new /media/* files 
  rm -rf /media/*

  # Create directory /var/lib/wistron-cpld-code-mgmt
  rm -rf $cpld_active_dir
  mkdir -p $cpld_active_dir
  echo "Create $cpld_active_dir"

  # For initializing file : cpld-release
  # create /var/lib/wistron-cpld-code-mgmt/cpld-release if it's not exist
  echo -e $default_cpld_version > "$cpld_active_dir/cpld-release"
  echo "Create $cpld_active_dir/cpld-release"

  # copy /var/lib/wistron-cpld-code-mgmt/cpld-release to /etc/cpld-release
  cp "$cpld_active_dir/cpld-release" $cpld_release_path || ret=$?
  if [ $ret -eq 0 ]; then
    echo "Copy $cpld_active_dir/cpld-release to $cpld_release_path"
  fi
}

# Get CPLD firmware version
get_cpld_fw_version() {
  version_major_minor_tmp=$(i2cget -y 4 0x41 0x00)
  version_major=$(echo $version_major_minor_tmp | cut -c 3)
  version_minor=$(echo $version_major_minor_tmp | cut -c 4)
  version_maint=$(i2cget -y 4 0x41 0x01 | cut -c 3-4)
  default_cpld_version="VERSION_ID=$version_major.$version_minor.$version_maint"

  echo "Get CPLD firmware version $version_major.$version_minor.$version_maint"
  return 0
}

case "$1" in
  fw)
    versionId=$2
    update_file_cpld_release
    update_fw
    ;;
  init)
    is_init=$2
    get_cpld_fw_version
    setup_cpld_release
    ;;
  *)
    echo "Invalid argument"
    exit 1
    ;;
esac
